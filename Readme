# Excel シート削除ツール - 時短で複数シートを一括削除

ExcelファイルのシートをGUIで簡単に削除できる時短ツールです。VSCodeで開発・実行でき、複数のシートを選択して一括削除することができます。

## 🚀 特徴

- **GUI操作**: 直感的なインターフェースでシートを選択・削除
- **バックアップ機能**: 削除前に自動でバックアップファイルを作成
- **一括操作**: 複数シートの同時削除が可能
- **安全設計**: 最低1つのシートは必ず残る仕様
- **リアルタイム情報**: ファイルサイズやシート数をリアルタイム表示

## 📋 必要な環境

- Python 3.7以降
- Windows, macOS, Linux対応
- VSCode推奨（任意）

## 📦 インストール手順

### 1. リポジトリのクローン（またはファイルのダウンロード）

```bash
git clone [your-repository-url]
cd excel-sheet-deleter
```

### 2. 仮想環境の作成

**Windows (PowerShell):**
```powershell
# 仮想環境作成
python -m venv venv

# 仮想環境をアクティベート
.\venv\Scripts\Activate.ps1
```

**macOS/Linux:**
```bash
# 仮想環境作成
python3 -m venv venv

# 仮想環境をアクティベート
source venv/bin/activate
```

### 3. 依存関係のインストール

```bash
pip install -r requirements.txt
```

## 🔧 requirements.txt

以下の内容で`requirements.txt`ファイルを作成してください：

```txt
openpyxl==3.1.5
```

## 🚀 実行方法

### VSCodeでの実行

1. VSCodeでプロジェクトフォルダを開く
2. ターミナルを開く（Ctrl + `）
3. 仮想環境がアクティベートされていることを確認
4. 以下のコマンドを実行：

```bash
python excel_sheet_deleter_gui.py
```

### コマンドラインでの実行

```bash
# 仮想環境をアクティベート（Windows）
.\venv\Scripts\Activate.ps1

# または（macOS/Linux）
source venv/bin/activate

# プログラムを実行
python excel_sheet_deleter_gui.py
```

## 🎯 使用方法

### 1. ファイルの選択
- **参照ボタン**: ファイル選択ダイアログでExcelファイルを選択
- **読み込みボタン**: 選択したファイルを読み込み

### 2. シートの選択
- 削除したいシートにチェックを入れる
- **全選択**: すべてのシートを選択
- **全解除**: すべての選択を解除

### 3. オプション設定
- **バックアップを作成**: 削除前に自動でバックアップファイルを作成（推奨）

### 4. 削除実行
- **選択したシートを削除**ボタンをクリック
- 確認ダイアログで内容を確認し、実行

## 🛡️ 安全機能

### バックアップ機能
削除実行前に元ファイルのコピーを自動作成：
- ファイル名: `元ファイル名_backup_YYYYMMDD_HHMMSS.xlsx`
- 同じフォルダに保存

### 安全チェック
- 最低1つのシートは必ず残る仕様
- すべてのシートを削除しようとするとエラーメッセージを表示

## 🏗️ プロジェクト構成

```
excel-sheet-deleter/
├── excel_sheet_deleter_gui.py  # メインプログラム
├── requirements.txt            # 依存関係
├── README.md                  # このファイル
└── venv/                      # 仮想環境（作成後）
```

## 🐛 トラブルシューティング

### よくある問題と解決方法

**1. ModuleNotFoundError: No module named 'openpyxl'**
```bash
pip install openpyxl
```

**2. ファイルが開けない**
- Excelファイルが他のアプリケーションで開かれていないか確認
- ファイルパスに日本語が含まれていないか確認

**3. 仮想環境がアクティベートできない**
- PowerShellの実行ポリシーを確認：
```powershell
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
```

## 🔄 開発者向け情報

### 主要なライブラリ
- **tkinter**: GUI作成
- **openpyxl**: Excelファイル操作
- **shutil**: ファイル操作
- **datetime**: タイムスタンプ生成

### カスタマイズ可能な部分
- 初期ファイルパスの変更（line 15）
- バックアップファイル名の形式（line 193）
- GUI のサイズや色（create_widgets メソッド）

## 📝 ライセンス

このプロジェクトはMITライセンスの下で公開されています。

## 🤝 貢献

バグ報告や機能提案は、GitHubのIssueでお願いします。プルリクエストも歓迎です！

---

**注意**: このツールを使用する際は、重要なExcelファイルのバックアップを事前に取ることをお勧めします。
