# Excelシート削除ツール - ライブラリインストールガイド 📊

このツールで使用するライブラリのインストール方法を詳しく解説します。必要最小限のライブラリで効率的に動作させましょう！

## 🔍 使用ライブラリの分析

### コードで使用されているライブラリ

```python
import tkinter as tk              # ✅ 標準ライブラリ（インストール不要）
from tkinter import ttk, messagebox, filedialog  # ✅ 標準ライブラリ
from openpyxl import load_workbook  # ❗ インストール必要
import os                        # ✅ 標準ライブラリ
import shutil                    # ✅ 標準ライブラリ
from datetime import datetime    # ✅ 標準ライブラリ
```

### 📋 結論: インストールが必要なのは1つだけ！

**必要なライブラリ:**
- `openpyxl` - Excel操作用ライブラリ

**標準ライブラリ（インストール不要）:**
- `tkinter` - GUI作成
- `os` - ファイル・ディレクトリ操作
- `shutil` - ファイルコピー・移動
- `datetime` - 日時操作

## 🚀 インストール手順

### 方法1: 最小限インストール（推奨）

**1. 仮想環境の準備:**
```powershell
# プロジェクトフォルダに移動
cd C:\Users\yukik\Desktop\excel

# 仮想環境をアクティベート
.\venv\Scripts\Activate.ps1
```

**2. openpyxlのみインストール:**
```powershell
pip install openpyxl==3.1.5
```

**3. 動作確認:**
```powershell
python excel_sheet_deleter_gui.py
```

### 方法2: requirements.txt使用

**1. requirements.txtを最適化:**
```powershell
# 現在のファイルをバックアップ
Copy-Item requirements.txt requirements_backup.txt

# 最小限の内容に変更
"openpyxl==3.1.5" | Out-File -FilePath requirements.txt -Encoding UTF8
```

**2. インストール:**
```powershell
pip install -r requirements.txt
```

## 📝 requirements.txt の最適版

```txt
openpyxl==3.1.5
```

## 🔧 詳細なセットアップ手順

### Step 1: 環境確認
```powershell
# Python環境確認
python --version

# 仮想環境がアクティベートされているか確認
# プロンプトに (venv) が表示されていればOK
(venv) PS C:\Users\yukik\Desktop\excel>
```

### Step 2: 現在の環境をクリーンアップ（オプション）
```powershell
# 不要なパッケージを確認
pip list

# 必要に応じて不要なパッケージを削除
pip uninstall pandas numpy pdfplumber pillow -y
```

### Step 3: 必要なライブラリのみインストール
```powershell
# openpyxlのみインストール
pip install openpyxl==3.1.5

# インストール確認
pip list
```

**期待する結果:**
```
Package    Version
---------- -------
et-xmlfile 2.0.0
openpyxl   3.1.5
pip        25.2
setuptools 65.5.0
```

### Step 4: 動作テスト
```powershell
# ツールを実行
python excel_sheet_deleter_gui.py
```

## 🧪 インストール確認スクリプト

**test_imports.py を作成:**
```python
# test_imports.py
try:
    import tkinter as tk
    print("✅ tkinter: OK (標準ライブラリ)")
    
    from tkinter import ttk, messagebox, filedialog
    print("✅ tkinter modules: OK")
    
    from openpyxl import load_workbook
    print("✅ openpyxl: OK")
    
    import os
    print("✅ os: OK (標準ライブラリ)")
    
    import shutil
    print("✅ shutil: OK (標準ライブラリ)")
    
    from datetime import datetime
    print("✅ datetime: OK (標準ライブラリ)")
    
    print("\n🎉 すべてのライブラリが正常にインポートできました！")
    print("Excelシート削除ツールを実行できます。")
    
except ImportError as e:
    print(f"❌ インポートエラー: {e}")
    print("不足しているライブラリをインストールしてください。")
```

**実行:**
```powershell
python test_imports.py
```

## 🔍 openpyxl の詳細情報

### openpyxl とは？
- **用途**: Excel (.xlsx) ファイルの読み書き
- **機能**: ワークブック・ワークシート操作
- **サイズ**: 約2MB（軽量）
- **依存関係**: et-xmlfile のみ

### バージョン 3.1.5 を選ぶ理由
- **安定性**: 実績のある安定バージョン
- **互換性**: Python 3.7以降で動作
- **機能**: Excel 2010以降の形式をサポート
- **サイズ**: 不要な機能を含まない最適なサイズ

## ⚡ 高速インストール（ワンライナー）

```powershell
# すべてを一度に実行
.\venv\Scripts\Activate.ps1; pip install openpyxl==3.1.5; python excel_sheet_deleter_gui.py
```

## 🛡️ トラブルシューティング

### よくある問題と解決法

**1. tkinter が見つからない（Linux系のみ）**
```bash
# Ubuntu/Debian
sudo apt-get install python3-tk

# CentOS/RHEL
sudo yum install tkinter
```
*注: Windowsでは tkinter は標準で含まれています*

**2. openpyxl インストールエラー**
```powershell
# キャッシュをクリアしてインストール
pip install --no-cache-dir openpyxl==3.1.5

# または、信頼できるホストを指定
pip install --trusted-host pypi.org openpyxl==3.1.5
```

**3. 仮想環境の問題**
```powershell
# 新しい仮想環境を作成
deactivate
Remove-Item venv -Recurse -Force
python -m venv venv
.\venv\Scripts\Activate.ps1
pip install openpyxl==3.1.5
```

## 📊 インストールサイズ比較

### 最小構成（このツール）
```
openpyxl==3.1.5     ~2MB
et-xmlfile          ~0.1MB
合計:               ~2.1MB
```

### 以前の構成（不要なライブラリ含む）
```
pandas              ~30MB
numpy               ~15MB
pdfplumber          ~5MB
pillow              ~10MB
その他              ~20MB
合計:               ~80MB
```

**削減効果: 約97%のサイズ削減！**

## 🎯 VSCodeでの確認方法

### 1. 拡張機能の確認
- **Python** 拡張がインストールされていることを確認

### 2. インタープリターの選択
```
Ctrl + Shift + P → "Python: Select Interpreter"
→ .\venv\Scripts\python.exe を選択
```

### 3. ターミナルでの確認
```powershell
# VSCodeターミナル（Ctrl + `）で実行
pip list
python test_imports.py
```

## 🚀 本番環境デプロイ用

### 他のPCでの再現手順
```powershell
# 1. プロジェクトをコピー
# 2. 仮想環境作成
python -m venv venv
.\venv\Scripts\Activate.ps1

# 3. 必要なライブラリのみインストール
pip install openpyxl==3.1.5

# 4. 実行
python excel_sheet_deleter_gui.py
```

### Docker環境用（上級者向け）
```dockerfile
FROM python:3.11-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY excel_sheet_deleter_gui.py .
CMD ["python", "excel_sheet_deleter_gui.py"]
```

## 💡 最適化のポイント

### 1. 必要最小限のライブラリ
- **openpyxl のみ** - Excel操作に特化
- **標準ライブラリ活用** - 追加インストール不要

### 2. バージョン固定
- **安定性確保** - テスト済みバージョンを使用
- **再現性保証** - 同じ環境を簡単に構築

### 3. 軽量な実行環境
- **高速起動** - 不要なライブラリがないため
- **メモリ効率** - 最小限のメモリ使用量

## 📋 チェックリスト

実行前に以下を確認してください：

- [ ] 仮想環境がアクティベートされている
- [ ] openpyxl==3.1.5 がインストールされている
- [ ] test_imports.py で全ライブラリが確認できる
- [ ] Excel ファイルが準備されている
- [ ] ツールが正常に起動する

---

これで必要最小限のライブラリだけでExcelシート削除ツールを効率的に動作させることができます！
